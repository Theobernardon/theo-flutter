name: Builder Flutter blueprint Workflow Réutilisable

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      platform:
        required: true
        type: string
        description: "plateforme à builder"
      os:
        required: true
        type: string
        description: "os à utiliser pour builder"
      path:
        required: true
        type: string
        description: "chemin de la build"

jobs:
  Build:
    runs-on: ${{ inputs.os }}
    steps:
      # 1️⃣ - Cloner ton code source
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ - Installer Flutter avec pubspec.yaml, et cache automatique
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable # Utilise le canal stable pour la version de Flutter
          flutter-version-file: pubspec.yaml
          cache: true # Active le cache pub + flutter automatiquement

      # 3️⃣ - Récupérer les dépendances Dart/Flutter
      - name: Install dependencies
        run: flutter pub get

      # 4️⃣ - Installer les dépendances nécessaires pour Linux si on build sur Linux
      - name: Installer les dépendances Linux
        if: inputs.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libglib2.0-dev

      # 5️⃣ - Builder ton application pour la plateforme spécifiée
      - name: Build for ${{ inputs.platform }}
        run: flutter build ${{ inputs.platform }}

      # 6️⃣ - Archiver les artefacts de la build pour la plateforme spécifiée
      - name: Archive ${{ inputs.platform }} build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-build-${{ inputs.platform }}
          path: ${{ inputs.path }}
