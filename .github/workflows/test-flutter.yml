name: Test et Analyse Flutter Workflow R√©utilisable

on:
  workflow_call:

jobs:
  # Dans un premier temps on fait l'analyse du code et les tests unitaires
  Analyse-et-tests:
    name: üö¶ tests
    # D√©finit les syst√®mes d'exploitation sur lesquels ex√©cuter le job
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ - Cloner ton code source
      - name: "Checkout code"
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ - Installer Flutter avec pubspec.yaml, et cache automatique
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version-file: pubspec.yaml
          cache: true # Active le cache pub + flutter automatiquement

      # 3Ô∏è‚É£ - R√©cup√©rer les d√©pendances Dart/Flutter
      - name: "Install dependencies"
        run: flutter pub get

      # 4Ô∏è‚É£ - V√©rifiez que le code est proprement format√©
      - name: "Format code"
        run: dart format --set-exit-if-changed .

      # 5Ô∏è‚É£ - V√©rifier que le code est propre (analyse statique)
      - name: "Analyze code"
        run: flutter analyze

      # 6Ô∏è‚É£ - Ex√©cuter les tests unitaires
      - name: "Run tests"
        run: flutter test
